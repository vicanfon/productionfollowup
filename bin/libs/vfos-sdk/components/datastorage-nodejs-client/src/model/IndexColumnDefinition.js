/**
 * vf-OS relational storage service
 * This is the vf-OS service for storing relational data. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: osaiz@ikerlan.es
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


let ApiClient = require('../../api_client.js');


/**
 * The IndexColumnDefinition model module.
 * @module model/IndexColumnDefinition
 * @version 1.0.0
 */
let IndexColumnDefinition = function () {


    //constructor
    //this['columns_expresion'] = columnsExpresion;

    /**
     * Constructs a <code>IndexColumnDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IndexColumnDefinition} obj Optional instance to populate.
     * @return {module:model/IndexColumnDefinition} The populated <code>IndexColumnDefinition</code> instance.
     */
    this.constructFromObject = function (data, obj) {
        if (data) {
            obj = obj || new IndexColumnDefinition();

            if (data.hasOwnProperty('columns_expresion')) {
                obj['columns_expresion'] = ApiClient.convertToType(data['columns_expresion'], 'String');
            }
            if (data.hasOwnProperty('ordering')) {
                obj['ordering'] = ApiClient.convertToType(data['ordering'], 'String');
            }
            if (data.hasOwnProperty('nulls')) {
                obj['nulls'] = ApiClient.convertToType(data['nulls'], 'String');
            }
        }
        return obj;
    }

    /**
     * Column name or an expression based on one or more columns of the table
     * @member {String} columns_expresion
     */
    this.columns_expresion = undefined;
    /**
     * (Optional) Defines the ordering. ASC-Ascending (default)   DESC-Descending
     * @member {module:model/IndexColumnDefinition.OrderingEnum} ordering
     */
    this.ordering = undefined;
    /**
     * (Optional) Defines the ordering of the nulls. FIRST-Specifies that nulls sort before non-nulls. This is the default when DESC is specified.   LAST-Specifies that nulls sort after non-nulls. This is the default when DESC is not specified.
     * @member {module:model/IndexColumnDefinition.NullsEnum} nulls
     */
    this.nulls = undefined;






    /**
     * Allowed values for the <code>ordering</code> property.
     * @enum {String}
     * @readonly
     */
     this.OrderingEnum = {

        /**
         * value: "ASC"
         * @const
         */
        "ASC": "ASC",

        /**
         * value: "DESC"
         * @const
         */
        "DESC": "DESC"
    };

    /**
     * Allowed values for the <code>nulls</code> property.
     * @enum {String}
     * @readonly
     */
    this.NullsEnum = {

        /**
         * value: "FIRST"
         * @const
         */
        "FIRST": "FIRST",

        /**
         * value: "LAST"
         * @const
         */
        "LAST": "LAST"
    };

}

module.exports = new IndexColumnDefinition();